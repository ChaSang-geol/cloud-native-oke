box:
 id: node:latest
 ports:
   - "8080"
 
dev:
  steps:
    - npm-install
    - internal/watch:
        code: node app.js
        reload: true

# Build definition
build:
  # The steps that will be executed on build
  steps:
    - script:
        code: export NODE_ENV='testing'
    # A step that executes `npm install` command
    - npm-install
    # A step that executes `npm test` command
    - npm-test

    # A custom script step, name value is used in the UI
    # and the code value contains the command that get executed
    - script:
        name: echo nodejs information
        code: |
          echo "node version $(node -v) running"
          echo "npm version $(npm -v) running"

#Push the docker image with our built and tested application to the Oracle Container Registry
myapp:
  steps:
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $OCI_AUTH_TOKEN
        repository: $DOCKER_REGISTRY/$DOCKER_REPO
        registry: https://$DOCKER_REGISTRY/v2
        tag: $WERCKER_GIT_BRANCH-$WERCKER_GIT_COMMIT-helidon-movie-api-mp
#        working-dir: /pipeline/source/
#        ports: 8080
#        cmd: java -jar target/helidon-movie-api-mp.jar



#Deploy our container from the Oracle Container Registry to the Oracle Container Engine (Kubernetes)
deploy-to-cluster:
  box:
    id: alpine
    cmd: /bin/sh

  steps:
    - bash-template
    
    - kubectl:
        name: create namespace
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f kube-namespace-config.yaml

    - kubectl:
        name: delete secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: delete secret wercker --namespace=${KUBERNETES_NAMESPACE}; echo delete registry secret

    - kubectl:
        name: create secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: create secret docker-registry wercker --docker-server=$DOCKER_REGISTRY --docker-email=nobody@oracle.com --docker-username=$DOCKER_USERNAME --docker-password='$OCI_AUTH_TOKEN' --namespace=${KUBERNETES_NAMESPACE}; echo delete registry secret

    - script:
        name: "Visualise Kubernetes config"
        code: cat kube-helidon-movie-api-mp-config.yml

    - kubectl:
        name: deploy helidon-movie-api-mp to kubernetes
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f kube-helidon-movie-api-mp-config.yml

    - script:
        name: "Visualise Kubernetes config"
        code: cat kube-springboot-movie-people-api-config.yml

    - kubectl:
        name: deploy springboot-movie-people-api to kubernetes
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f kube-springboot-movie-people-api-config.yml

    - script:
        name: "Visualise Kubernetes config"
        code: cat kube-jet-movie-msa-ui-config.yml

    - kubectl:
        name: deploy jet-movie-msa-ui to kubernetes
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_AUTH_TOKEN
        insecure-skip-tls-verify: true
        command: apply -f kube-jet-movie-msa-ui-config.yml
